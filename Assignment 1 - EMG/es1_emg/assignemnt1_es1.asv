load('ES1_emg.mat');
%asse y mV noi abbiamo questi dati asse x ms
% Definisci le frequenze di taglio
lowFreq = 30; % Frequenza di taglio inferiore
highFreq = 450; % Frequenza di taglio superiore

% Calcola la durata del filtro in campioni
fs = 2000; % Frequenza di campionamento
nyquist = fs / 2;
lowCutoff = lowFreq / nyquist;
highCutoff = highFreq / nyquist;
filterOrder = 100; % Ordine del filtro

% Creazione del filtro FIR
b = fir1(filterOrder, [lowCutoff, highCutoff]);

% Applica il filtro al segnale EMG
filteredEMG = filtfilt(b, 1, Es1_emg.matrix(:,1));

% Plot del segnale EMG originale (non filtrato) in blu
figure;
plot((0:size(Es1_emg.matrix, 1) - 1) / fs * 1000, Es1_emg.matrix(:, 1), 'b');
hold on;

% Plot del segnale EMG filtrato in rosso
plot((0:size(filteredEMG, 1) - 1) / fs * 1000, filteredEMG, 'r');

% Aggiungi etichette e titolo
xlabel('Tempo (ms)');
ylabel('Segnale EMG (mV)');
title('Segnale EMG Originale vs Filtrato');
legend('Non Filtrato', 'Filtrato');

hold off;

% Rettifica il segnale filteredEMG vuol dire considerare solo i valori
% positivi dell'uscita
segnaleRettificato = abs(filteredEMG);

% Grafico del segnale EMG rettificato in rosso
figure;
plot((0:size(segnaleRettificato, 1) - 1) / fs * 1000, segnaleRettificato, 'r');

% Aggiungi etichette e titolo
xlabel('Tempo (ms)');
ylabel('Segnale EMG Rettificato (mV)');
title('Segnale EMG Rettificato');


envelope=lowpass(segnaleRettificato,4,2000);
% Crea un nuovo grafico per il segnale rettificato
figure;
plot(segnaleRettificato);
title('Segnale Rettificato and envelope');
xlabel('Campione');
ylabel('Amplitude');
hold on;
% Crea un altro grafico per l'inviluppo superiore

plot(envelope ,'r');
legend('rectified signal','envelope');
hold off;

fmax=450;
newfs=2000/2;
%newfs > 2fmax il teorema di nyquist è soddisfatto perciò si può utilizza
%newfs per fare il down-sapling dell'envelope
y_down_sample=downsample(envelope,2);
figure;
plot(y_down_sample);



% Estrai il segnale di accelerometro - X
accelerometer_X = Es1_emg.matrix(2, :);  % La colonna 2 rappresenta Deltoid Accelerometer - X

% Calcola il tempo in base alla frequenza di campionamento
N = length(accelerometer_X);
t = (0:N-1) / Fs;  % Tempo in secondi

% Plotta il segnale di accelerometro - X
figure;
plot(t, accelerometer_X);
xlabel('Tempo (s)');
ylabel('Valore accelerometro - X');
title('Segnale di Accelerometro - X');
hold on;
plot(envelope,'y');








